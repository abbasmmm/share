In our setup, the container application doesn't have advanced knowledge about the micro frontends (MFEs). It's designed with a hands-off approach. First, the container app reaches out to a configuration service to fetch details about navigation and the available MFEs. With this information in hand, it dynamically builds a menu for users to navigate without needing to know specific MFE details. When a user clicks on a menu item, the container app loads the corresponding MFE by fetching its script based on the URL specified in the configuration. This way, the container app and the MFEs work together without being tightly connected.

This loose coupling not only enhances scalability, allowing us to easily add or remove MFEs, but also fosters independent work. Different teams can work on individual MFEs without having to tinker with the container app's code. The architecture remains flexible, adaptable to change, and keeps the development process streamlined.
